#Send the user id
query.trader.instruments =SELECT \
    VALMER_PRICE_VECTOR.id_valmer_price_vector AS Valmer_ID, \
    VALMER_PRICE_VECTOR.days_to_expire AS DXV, \
    CONCAT(VALMER_PRICE_VECTOR.tv, \
    CASE MID(VALMER_PRICE_VECTOR.series, 3, 2) \
WHEN '01' THEN ' JAN ' \
        WHEN '02' THEN ' FEB ' \
        WHEN '03' THEN ' MAR ' \
        WHEN '04' THEN ' APR ' \
        WHEN '05' THEN ' MAY ' \
        WHEN '06' THEN ' JUN ' \
        WHEN '07' THEN ' JUL ' \
        WHEN '08' THEN ' AUG ' \
        WHEN '09' THEN ' SEP ' \
        WHEN '10' THEN ' OCT ' \
        WHEN '11' THEN ' NOV ' \
        WHEN '12' THEN ' DEC ' \
END, \
        LEFT(VALMER_PRICE_VECTOR.series, 2),' (',RIGHT(VALMER_PRICE_VECTOR.series,2),')') AS instrumenttbl \
    FROM \
VALMER_PRICE_VECTOR, USER, USERXINSTRUMENT, INSTRUMENT_TYPE, latest_valmer \
    WHERE \
USER.ID_USER = ? \
AND USERXINSTRUMENT.fk_id_user=USER.id_user \
AND USERXINSTRUMENT.fk_id_instrument=INSTRUMENT_TYPE.id_instrument \
AND VALMER_PRICE_VECTOR.tv = INSTRUMENT_TYPE.tv \
AND DATE(VALMER_PRICE_VECTOR.date) = latest_valmer.DATE \
 \
ORDER BY USERXINSTRUMENT.priority ASC, DXV ASC, instrumenttbl ASC

#Send the date first and second the user id, third the same user id
# UID UID UID UID UID UID UID DATE UID UID
query.trader.tickets=SELECT \
DATE(tickets.date_time) AS date_time, \
tickets.instrument AS instrument, \
CASE tickets.buyeruid \
WHEN ? THEN \
tickets.buyer \
ELSE tickets.workbench \
END AS buyer, \
CASE tickets.selleruid \
WHEN ? THEN \
tickets.seller \
ELSE tickets.workbench \
END AS seller, \
ROUND( \
CASE tickets.buyeruid \
WHEN ? THEN \
tickets.buyer_rate \
ELSE tickets.seller_rate \
END , 2) AS rate, \
CASE tickets.buyeruid \
WHEN ? THEN \
tickets.amount \
ELSE -1*tickets.amount \
END AS amount, \
round(case tickets.buyeruid \
WHEN ? THEN \
tickets.amount/tickets.updated_nominal_value*tickets.buyer_price \
ELSE -1*tickets.amount/tickets.updated_nominal_value*tickets.seller_price \
END,2) AS amountr, \
CASE tickets.buyeruid \
WHEN ? THEN \
tickets.amount/tickets.updated_nominal_value \
ELSE -1*tickets.amount/tickets.updated_nominal_value \
END AS titles, \
ROUND( \
CASE tickets.buyeruid \
WHEN ? THEN \
tickets.buyer_price \
ELSE tickets.seller_price \
END , 6)AS price \
FROM tickets WHERE \
DATE(tickets.date_time) = ? \
AND (tickets.buyeruid = ? OR tickets.selleruid = ?) \
ORDER BY tickets.date_time DESC

                
#Send the date first and second the user id, third the same user id
query.trader.activity=SELECT \
tickets.instrument AS instrument, \
SUM(CASE tickets.buyeruid \
WHEN ? THEN \
tickets.amount \
ELSE -1*tickets.amount \
END) AS standing, \
SUM(CASE tickets.buyeruid \
WHEN ? THEN \
tickets.buyer_rate*tickets.amount \
ELSE tickets.seller_rate*tickets.amount \
END)/SUM(tickets.amount) AS rate, \
SUM(CASE tickets.buyeruid \
WHEN ? THEN \
tickets.buyer_price*tickets.amount \
ELSE tickets.seller_price*tickets.amount \
END)/SUM(tickets.amount) AS price \
FROM \
tickets \
WHERE \
DATE(tickets.date_time) = ? \
AND (tickets.buyeruid= ? OR tickets.selleruid= ? ) \
GROUP BY tickets.instrument \
ORDER BY tickets.instrument ASC

# SEND DATE
query.trader.market=SELECT \
STANDING.current_amount, \
STANDING.value \
FROM \
STANDING \
WHERE \
STANDING.fk_id_standing_status='3' \
AND DATE(STANDING.datetime) = ?;


# String identification from drop down
query.trader.graph.one=SELECT \
STANDING.datetime, \
    STANDING.value as yield \
FROM \
VALMER_PRICE_VECTOR, STANDING \
WHERE \
STANDING.fk_id_valmer_price_vector=VALMER_PRICE_VECTOR.id_valmer_price_vector \
    AND DATE(VALMER_PRICE_VECTOR.date) >= DATE_SUB(NOW(), INTERVAL 1 DAY) \
    AND \
CONCAT(VALMER_PRICE_VECTOR.tv, \
CASE MID(VALMER_PRICE_VECTOR.series, 3, 2) \
WHEN '01' THEN ' JAN ' \
        WHEN '02' THEN ' FEB ' \
        WHEN '03' THEN ' MAR ' \
        WHEN '04' THEN ' APR ' \
        WHEN '05' THEN ' MAY ' \
        WHEN '06' THEN ' JUN ' \
        WHEN '07' THEN ' JUL ' \
        WHEN '08' THEN ' AUG ' \
        WHEN '09' THEN ' SEP ' \
        WHEN '10' THEN ' OCT ' \
        WHEN '11' THEN ' NOV ' \
        WHEN '12' THEN ' DEC ' \
END, \
LEFT(VALMER_PRICE_VECTOR.series, 2),' (',RIGHT(VALMER_PRICE_VECTOR.series,2),')') = ? \
ORDER BY \
DATE


# Send number of days and string identification from drop down
query.trader.graph=SELECT \
DATE(VALMER_PRICE_VECTOR.date) as date, \
    VALMER_PRICE_VECTOR.yield \
FROM \
VALMER_PRICE_VECTOR \
WHERE \
DATE(VALMER_PRICE_VECTOR.date) >= DATE_SUB(NOW(), INTERVAL ? DAY) \
AND \
        CONCAT(ifnull(VALMER_PRICE_VECTOR.tv,''), \
ifnull(CASE MID(VALMER_PRICE_VECTOR.series, 3, 2) \
WHEN '01' THEN ' JAN ' \
        WHEN '02' THEN ' FEB ' \
        WHEN '03' THEN ' MAR ' \
        WHEN '04' THEN ' APR ' \
        WHEN '05' THEN ' MAY ' \
        WHEN '06' THEN ' JUN ' \
        WHEN '07' THEN ' JUL ' \
        WHEN '08' THEN ' AUG ' \
        WHEN '09' THEN ' SEP ' \
        WHEN '10' THEN ' OCT ' \
        WHEN '11' THEN ' NOV ' \
        WHEN '12' THEN ' DEC ' \
END,''), \
ifnull(LEFT(VALMER_PRICE_VECTOR.series, 2),''),' (',RIGHT(VALMER_PRICE_VECTOR.series,2),')') = ? \
ORDER BY \
date

query.trader.workbench=SELECT \
    BASE.FINST AS workbench, \
    CASE  \
WHEN SC.SC > 0 THEN \
SC.SC \
ELSE SCDEF.SC \
END AS surcharge \
FROM \
( \
    SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution AS FINST \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
AND INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution IN \
(SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
) \
ORDER BY INSTITUTION_WORKBENCH_PRIORITY.priority ASC \
    ) AS BASE \
    LEFT OUTER JOIN \
(SELECT \
INSTITUTION_INSTRUMENTS.surcharge AS SC, INSTITUTION_INSTRUMENTS.fk_id_institution AS FINST \
FROM \
INSTITUTION_INSTRUMENTS \
WHERE \
INSTITUTION_INSTRUMENTS.fk_id_to_institution='1' \
AND INSTITUTION_INSTRUMENTS.fk_id_instrument_type= ? \
AND INSTITUTION_INSTRUMENTS.enabled='1' \
AND INSTITUTION_INSTRUMENTS.fk_id_institution IN \
(SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
AND INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution IN \
(SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
) \
)  \
)AS SCDEF ON (BASE.FINST = SCDEF.FINST) \
    LEFT OUTER JOIN \
(SELECT \
INSTITUTION_INSTRUMENTS.surcharge AS SC, INSTITUTION_INSTRUMENTS.fk_id_institution AS FINST \
FROM \
INSTITUTION_INSTRUMENTS \
WHERE \
INSTITUTION_INSTRUMENTS.fk_id_to_institution= ? \
AND INSTITUTION_INSTRUMENTS.fk_id_instrument_type= ? \
AND INSTITUTION_INSTRUMENTS.enabled='1' \
AND INSTITUTION_INSTRUMENTS.fk_id_institution IN \
(SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
AND INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution IN \
(SELECT \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_workbench_institution \
FROM \
INSTITUTION_WORKBENCH_PRIORITY \
WHERE \
INSTITUTION_WORKBENCH_PRIORITY.fk_id_main_institution= ? \
) \
)  \
)AS SC ON (BASE.FINST = SC.FINST) \
WHERE (SC.SC>0 OR SCDEF.SC) LIMIT 1